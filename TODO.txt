Create pipeline for extracting data for players for each league
✅ 1. Extract player scouting report from FBref
✅ 1.1 scout_summary & scout_full 
✅ 1.2 See all stats above x% in scout report
✅ 1.3 Extract all 9 tables of player (stats_standard_dom_lg, stats_shooting_dom_lg, stats_passing_dom_lg, stats_passing_types_dom_lg, stats_gca_dom_lg, stats_defense_dom_lg, stats_possession_dom_lg, stats_playing_time_dom_lg, stats_misc_dom_lg)
✅ 1.4 Per90
✅ 1.5 Filter by season
✅ 1.6 Reformat for PowerBI

✅ 2. Plot data points from scout report --> PowerBI
✅ 2.1 Create script that transforms into more suitable csv file (; and ,)
✅ 2.2 Add functionality to pipeline inside scraping

✅ 3. Only calculate per90 for integer columns --> Not same order as merged, but doesn't matter as we still have the data

4.0 Rescrape all data with filter by 90s played before per90 

✅ 5.0 Team scrape data
✅ 5.1 Average of all teams as one row 
        5.1.1 Merge Team scrape data with league average
✅ 5.2 Calculate per90 (90s)

6.0 Calculate average for all players
6.1 Append all_players_average to list

"team_output/PremierLeague_24_25/team_merged_PremierLeague_24_25.csv"

We keep per90 upto PowerBI, but have the option to let Python calculate also.
Best practice is to keep total in data source

If PowerBI makes Column1, Column2... then you can Transform the data and choose "Select first row as header"

For Windows
git pull
python -m venv venv
.\venv\Scripts\activate
pip install -r requirements.txt

Proxy server


NOTES:
I tried to compare single player against entire league average of every team. 
Team per90 stats represent the whole squad’s combined output, not individual output, so the numbers are on different scales and contexts.